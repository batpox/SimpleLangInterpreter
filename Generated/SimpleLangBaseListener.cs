//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SimpleLang.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISimpleLangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SimpleLangBaseListener : ISimpleLangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] SimpleLangParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] SimpleLangParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat([NotNull] SimpleLangParser.StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat([NotNull] SimpleLangParser.StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] SimpleLangParser.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] SimpleLangParser.ClassDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.classVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassVarDecl([NotNull] SimpleLangParser.ClassVarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.classVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassVarDecl([NotNull] SimpleLangParser.ClassVarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] SimpleLangParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] SimpleLangParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] SimpleLangParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] SimpleLangParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] SimpleLangParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] SimpleLangParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] SimpleLangParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] SimpleLangParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.dimensions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDimensions([NotNull] SimpleLangParser.DimensionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.dimensions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDimensions([NotNull] SimpleLangParser.DimensionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.indexList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexList([NotNull] SimpleLangParser.IndexListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.indexList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexList([NotNull] SimpleLangParser.IndexListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] SimpleLangParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] SimpleLangParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] SimpleLangParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] SimpleLangParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Str</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStr([NotNull] SimpleLangParser.StrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Str</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStr([NotNull] SimpleLangParser.StrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDiv([NotNull] SimpleLangParser.MulDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDiv([NotNull] SimpleLangParser.MulDivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSub([NotNull] SimpleLangParser.AddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSub([NotNull] SimpleLangParser.AddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParens([NotNull] SimpleLangParser.ParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParens([NotNull] SimpleLangParser.ParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Real</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReal([NotNull] SimpleLangParser.RealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Real</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReal([NotNull] SimpleLangParser.RealContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarRefLabel</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarRefLabel([NotNull] SimpleLangParser.VarRefLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarRefLabel</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarRefLabel([NotNull] SimpleLangParser.VarRefLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt([NotNull] SimpleLangParser.IntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="SimpleLangParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt([NotNull] SimpleLangParser.IntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleLangParser.varReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarReference([NotNull] SimpleLangParser.VarReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleLangParser.varReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarReference([NotNull] SimpleLangParser.VarReferenceContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
